import streamlit as st
import pandas as pd
import json
import os
from datetime import datetime
from streamlit_option_menu import option_menu

# Fun√ß√µes de persist√™ncia
def carregar_dados(nome_arquivo):
    if os.path.exists(nome_arquivo):
        with open(nome_arquivo, 'r', encoding='utf-8') as f:
            return json.load(f)
    return []

def salvar_dados(nome_arquivo, dados):
    with open(nome_arquivo, 'w', encoding='utf-8') as f:
        json.dump(dados, f, ensure_ascii=False, indent=4)

# Carregando dados
processos = carregar_dados("dados_processos.json")
movimentacoes = carregar_dados("dados_movimentacoes.json")
despachos = carregar_dados("dados_despachos.json")
jurisprudencias = carregar_dados("dados_jurisprudencia.json")
agenda = carregar_dados("dados_agenda.json")
usuarios = carregar_dados("usuarios.json")

st.set_page_config(page_title="Sistema Judicial", layout="wide")

with st.sidebar:
    menu = option_menu("Menu", ["In√≠cio", "Processos", "Movimenta√ß√µes", "Despachos", "Jurisprud√™ncia", "Agenda", "Hist√≥rico", "Usu√°rios"], icons=["house", "folder", "shuffle", "file-earmark-text", "book", "calendar", "clock-history", "people"], default_index=0)

if menu == "In√≠cio":
    st.title("üìå Sistema Judicial - Painel Principal")
    st.write("Bem-vindo ao sistema judicial.")

if menu == "Processos":
    st.header("üìÅ Cadastro de Processos")
    with st.form("form_processo"):
        numero = st.text_input("N√∫mero do Processo")
        autor = st.text_input("Autor")
        reu = st.text_input("R√©u")
        vara = st.text_input("Vara")
        data_cadastro = datetime.now().strftime("%d/%m/%Y %H:%M")
        submitted = st.form_submit_button("Salvar Processo")
        if submitted:
            processos.append({"numero": numero, "autor": autor, "reu": reu, "vara": vara, "data": data_cadastro})
            salvar_dados("dados_processos.json", processos)
            st.success("Processo salvo com sucesso!")
    st.write("### Processos Cadastrados")
    st.dataframe(pd.DataFrame(processos))

if menu == "Movimenta√ß√µes":
    st.header("üîÅ Movimenta√ß√µes")
    with st.form("form_movimentacao"):
        numero_processo = st.text_input("N√∫mero do Processo")
        descricao = st.text_area("Descri√ß√£o da Movimenta√ß√£o")
        prazo = st.date_input("Prazo")
        submitted = st.form_submit_button("Salvar Movimenta√ß√£o")
        if submitted:
            movimentacoes.append({"processo": numero_processo, "descricao": descricao, "prazo": prazo.strftime("%d/%m/%Y")})
            salvar_dados("dados_movimentacoes.json", movimentacoes)
            st.success("Movimenta√ß√£o salva com sucesso!")
    st.write("### Movimenta√ß√µes Cadastradas")
    st.dataframe(pd.DataFrame(movimentacoes))

if menu == "Despachos":
    st.header("üìÑ Despachos")
    with st.form("form_despacho"):
        numero_processo = st.text_input("N√∫mero do Processo para Despacho")
        despacho_texto = st.text_area("Texto do Despacho")
        data_despacho = datetime.now().strftime("%d/%m/%Y %H:%M")
        submitted = st.form_submit_button("Salvar Despacho")
        if submitted:
            despachos.append({"processo": numero_processo, "texto": despacho_texto, "data": data_despacho})
            salvar_dados("dados_despachos.json", despachos)
            st.success("Despacho salvo com sucesso!")
    st.write("### Despachos Cadastrados")
    st.dataframe(pd.DataFrame(despachos))

if menu == "Jurisprud√™ncia":
    st.header("üìö Cadastro de Jurisprud√™ncia")
    with st.form("form_jurisprudencia"):
        tribunal = st.selectbox("Tribunal", ["TRF", "JF"])
        ementa = st.text_area("Ementa")
        referencia = st.text_input("Refer√™ncia")
        submitted = st.form_submit_button("Salvar Jurisprud√™ncia")
        if submitted:
            jurisprudencias.append({"tribunal": tribunal, "ementa": ementa, "referencia": referencia})
            salvar_dados("dados_jurisprudencia.json", jurisprudencias)
            st.success("Jurisprud√™ncia salva com sucesso!")
    st.write("### Jurisprud√™ncias Cadastradas")
    st.dataframe(pd.DataFrame(jurisprudencias))

if menu == "Agenda":
    st.header("üóìÔ∏è Agenda de Reuni√µes e Eventos")
    with st.form("form_agenda"):
        titulo = st.text_input("T√≠tulo")
        data_evento = st.date_input("Data")
        hora = st.text_input("Hora")
        local = st.text_input("Local")
        participante = st.text_input("Representante/Advogado")
        presencial = st.selectbox("Modalidade", ["Presencial", "Online"])
        submitted = st.form_submit_button("Salvar Evento")
        if submitted:
            agenda.append({"titulo": titulo, "data": data_evento.strftime("%d/%m/%Y"), "hora": hora, "local": local, "participante": participante, "modalidade": presencial})
            salvar_dados("dados_agenda.json", agenda)
            st.success("Evento salvo com sucesso!")
    st.write("### Eventos Agendados")
    st.dataframe(pd.DataFrame(agenda))

if menu == "Hist√≥rico":
    st.header("üìú Hist√≥rico do Processo")
    numero_busca = st.text_input("Informe o n√∫mero do processo para ver hist√≥rico")
    if numero_busca:
        historico = []
        for m in movimentacoes:
            if m['processo'] == numero_busca:
                historico.append({"tipo": "Movimenta√ß√£o", **m})
        for d in despachos:
            if d['processo'] == numero_busca:
                historico.append({"tipo": "Despacho", **d})
        historico_ordenado = sorted(historico, key=lambda x: x.get("data", ""))
        st.write("### Hist√≥rico do Processo")
        st.dataframe(pd.DataFrame(historico_ordenado))

if menu == "Usu√°rios":
    st.header("üë§ Gerenciamento de Usu√°rios")
    with st.form("form_usuario"):
        nome = st.text_input("Nome")
        email = st.text_input("Email")
        perfil = st.selectbox("Perfil", ["Administrador", "Usu√°rio Comum"])
        submitted = st.form_submit_button("Salvar Usu√°rio")
        if submitted:
            usuarios.append({"nome": nome, "email": email, "perfil": perfil})
            salvar_dados("usuarios.json", usuarios)
            st.success("Usu√°rio cadastrado com sucesso!")
    st.write("### Lista de Usu√°rios")
    st.dataframe(pd.DataFrame(usuarios))

# Rodap√©
st.markdown("---")
st.markdown("Desenvolvido por Igor Sansone - Setor de Secretaria")
